/*
 * OSCAL REST
 *
 * A draft proposal from [Easy Dynamics](https://www.easydynamics.com) of a REST API specification for interacting   with [OSCAL](https://pages.nist.gov/OSCAL/) models.  Standardized data models like OSCAL lay the groundwork for interoperability of systems, and an ecosystem of meaningful integrations can be brought to life through a standardized REST API. That interface needs to define simple CRUD operations, but should also describe how to manipulate relationships and make partial changes.  Such an API will likely see the most success across various vendors and projects when maintained by a standards body or community, and we're looking to get that conversation started with this effort.  ## Identifier Scope Note that all object identifiers are **scoped to the system** implementing the REST API   and are expected to be unique.  <details>   <summary>Example</summary>   To associate a Party with a known Component Definition with a UUID you might:   1. Search for the Party:       ```       GET /parties/search?query=bob       ```       ```       [         {           \"uuid\": \"d834ed5e-9652-4b78-87e7-a9f8686f4e60\",           \"type\": \"person\",           \"name\": \"Bob Johnson\"         }       ]       ```   2. Use the found Party's ID to associate with the component definition:       ```       PUT /component-definitions/599b6fa5-3e18-4580-bd8f-8a181776c6e8/parties/d834ed5e-9652-4b78-87e7-a9f8686f4e60       ``` </details>  ## Partial Payloads in PATCH Requests All updates to 'root' OSCAL objects via `PATCH` requests should accept a partial payload containing only the changed data and the entire updated object should be returned.  The UUID of the root object must not change in the payload and implementations should throw an error if such a request is made. <details>   <summary>Example</summary>   Example request:   ```   PATCH /system-security-plans/cff8385f-108e-40a5-8f7a-82f3dc0eaba8   {     \"system-security-plan\": {       \"uuid\": \"cff8385f-108e-40a5-8f7a-82f3dc0eaba8\",       \"metadata\": {         \"title\": \"Some New Title\"       }     }   }   ``` </details> 
 *
 * API version: 0.1.0
 * Contact: info@easydynamics.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package compserv

import (
	"context"
	"net/http"
)



// OSCALCatalogApiRouter defines the required methods for binding the api requests to a responses for the OSCALCatalogApi
// The OSCALCatalogApiRouter implementation should parse necessary information from the http request,
// pass the data to a OSCALCatalogApiServicer to perform the required actions, then write the service results to the http response.
type OSCALCatalogApiRouter interface { 
	AddCatalog(http.ResponseWriter, *http.Request)
	DeleteCatalog(http.ResponseWriter, *http.Request)
	FindCatalogsByName(http.ResponseWriter, *http.Request)
	GetCatalogById(http.ResponseWriter, *http.Request)
	GetCatalogs(http.ResponseWriter, *http.Request)
	ReplaceCatalog(http.ResponseWriter, *http.Request)
	UpdateCatalog(http.ResponseWriter, *http.Request)
}
// OSCALComponentDefinitionApiRouter defines the required methods for binding the api requests to a responses for the OSCALComponentDefinitionApi
// The OSCALComponentDefinitionApiRouter implementation should parse necessary information from the http request,
// pass the data to a OSCALComponentDefinitionApiServicer to perform the required actions, then write the service results to the http response.
type OSCALComponentDefinitionApiRouter interface { 
	AddComponentControlImplementationToComponentDefinition(http.ResponseWriter, *http.Request)
	AddComponentDefinition(http.ResponseWriter, *http.Request)
	AddComponentToComponentDefinition(http.ResponseWriter, *http.Request)
	AddPartyToComponentDefinition(http.ResponseWriter, *http.Request)
	AddPartyToComponentDefinitionRole(http.ResponseWriter, *http.Request)
	AddRoleToComponentDefinition(http.ResponseWriter, *http.Request)
	DeleteComponentDefinition(http.ResponseWriter, *http.Request)
	FindComponentDefinitionsByName(http.ResponseWriter, *http.Request)
	GetComponentDefinitionById(http.ResponseWriter, *http.Request)
	GetComponentDefinitions(http.ResponseWriter, *http.Request)
	RemoveComponentControlImplementationFromComponentDefinition(http.ResponseWriter, *http.Request)
	RemoveComponentFromComponentDefinition(http.ResponseWriter, *http.Request)
	RemovePartyFromComponentDefinition(http.ResponseWriter, *http.Request)
	RemovePartyFromComponentDefinitionRole(http.ResponseWriter, *http.Request)
	RemoveRoleFromComponentDefinition(http.ResponseWriter, *http.Request)
	ReplaceComponentDefinition(http.ResponseWriter, *http.Request)
	UpdateComponentControlImplementationInComponentDefinition(http.ResponseWriter, *http.Request)
	UpdateComponentDefinition(http.ResponseWriter, *http.Request)
	UpdateComponentInComponentDefinition(http.ResponseWriter, *http.Request)
}
// OSCALPartyApiRouter defines the required methods for binding the api requests to a responses for the OSCALPartyApi
// The OSCALPartyApiRouter implementation should parse necessary information from the http request,
// pass the data to a OSCALPartyApiServicer to perform the required actions, then write the service results to the http response.
type OSCALPartyApiRouter interface { 
	AddParty(http.ResponseWriter, *http.Request)
	DeleteParty(http.ResponseWriter, *http.Request)
	FindPartiesByName(http.ResponseWriter, *http.Request)
	GetParties(http.ResponseWriter, *http.Request)
	GetPartyById(http.ResponseWriter, *http.Request)
	UpdateParty(http.ResponseWriter, *http.Request)
}
// OSCALProfileApiRouter defines the required methods for binding the api requests to a responses for the OSCALProfileApi
// The OSCALProfileApiRouter implementation should parse necessary information from the http request,
// pass the data to a OSCALProfileApiServicer to perform the required actions, then write the service results to the http response.
type OSCALProfileApiRouter interface { 
	AddCatalogToProfile(http.ResponseWriter, *http.Request)
	AddPartyToProfile(http.ResponseWriter, *http.Request)
	AddPartyToProfileRole(http.ResponseWriter, *http.Request)
	AddProfile(http.ResponseWriter, *http.Request)
	AddProfileToProfile(http.ResponseWriter, *http.Request)
	AddRoleToProfile(http.ResponseWriter, *http.Request)
	DeleteProfile(http.ResponseWriter, *http.Request)
	FindProfilesByName(http.ResponseWriter, *http.Request)
	GetProfileById(http.ResponseWriter, *http.Request)
	GetProfiles(http.ResponseWriter, *http.Request)
	RemoveCatalogfromProfile(http.ResponseWriter, *http.Request)
	RemovePartyfromProfile(http.ResponseWriter, *http.Request)
	RemovePartyfromProfileRole(http.ResponseWriter, *http.Request)
	RemoveProfilefromProfile(http.ResponseWriter, *http.Request)
	RemoveRolefromProfile(http.ResponseWriter, *http.Request)
	ReplaceProfile(http.ResponseWriter, *http.Request)
	UpdateProfile(http.ResponseWriter, *http.Request)
}
// OSCALSystemSecurityPlanApiRouter defines the required methods for binding the api requests to a responses for the OSCALSystemSecurityPlanApi
// The OSCALSystemSecurityPlanApiRouter implementation should parse necessary information from the http request,
// pass the data to a OSCALSystemSecurityPlanApiServicer to perform the required actions, then write the service results to the http response.
type OSCALSystemSecurityPlanApiRouter interface { 
	AddComponentToSsp(http.ResponseWriter, *http.Request)
	AddImplementedRequirementToSsp(http.ResponseWriter, *http.Request)
	AddPartyToSsp(http.ResponseWriter, *http.Request)
	AddSsp(http.ResponseWriter, *http.Request)
	DeleteSsp(http.ResponseWriter, *http.Request)
	FindSspsByName(http.ResponseWriter, *http.Request)
	GetSspById(http.ResponseWriter, *http.Request)
	GetSsps(http.ResponseWriter, *http.Request)
	RemoveComponentfromSsp(http.ResponseWriter, *http.Request)
	RemovePartyfromSsp(http.ResponseWriter, *http.Request)
	ReplaceSsp(http.ResponseWriter, *http.Request)
	UpdateImplementedRequirementOfSsp(http.ResponseWriter, *http.Request)
	UpdateSsp(http.ResponseWriter, *http.Request)
}


// OSCALCatalogApiServicer defines the api actions for the OSCALCatalogApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OSCALCatalogApiServicer interface { 
	AddCatalog(context.Context, OscalCatalog) (ImplResponse, error)
	DeleteCatalog(context.Context, string, string) (ImplResponse, error)
	FindCatalogsByName(context.Context, string) (ImplResponse, error)
	GetCatalogById(context.Context, string) (ImplResponse, error)
	GetCatalogs(context.Context) (ImplResponse, error)
	ReplaceCatalog(context.Context, string, OscalCatalog) (ImplResponse, error)
	UpdateCatalog(context.Context, string, OscalCatalogUpdateExample) (ImplResponse, error)
}


// OSCALComponentDefinitionApiServicer defines the api actions for the OSCALComponentDefinitionApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OSCALComponentDefinitionApiServicer interface { 
	AddComponentControlImplementationToComponentDefinition(context.Context, string, string, OscalComponentDefinitionComponentControlImplementation, string) (ImplResponse, error)
	AddComponentDefinition(context.Context, OscalComponentDefinition) (ImplResponse, error)
	AddComponentToComponentDefinition(context.Context, string, OscalComponentDefinitionComponent, string) (ImplResponse, error)
	AddPartyToComponentDefinition(context.Context, string, string, string) (ImplResponse, error)
	AddPartyToComponentDefinitionRole(context.Context, string, string, string, string) (ImplResponse, error)
	AddRoleToComponentDefinition(context.Context, string, OscalRole, string) (ImplResponse, error)
	DeleteComponentDefinition(context.Context, string, string) (ImplResponse, error)
	FindComponentDefinitionsByName(context.Context, string) (ImplResponse, error)
	GetComponentDefinitionById(context.Context, string) (ImplResponse, error)
	GetComponentDefinitions(context.Context) (ImplResponse, error)
	RemoveComponentControlImplementationFromComponentDefinition(context.Context, string, string, string, string) (ImplResponse, error)
	RemoveComponentFromComponentDefinition(context.Context, string, string, string) (ImplResponse, error)
	RemovePartyFromComponentDefinition(context.Context, string, string, string) (ImplResponse, error)
	RemovePartyFromComponentDefinitionRole(context.Context, string, string, string, string) (ImplResponse, error)
	RemoveRoleFromComponentDefinition(context.Context, string, string, string) (ImplResponse, error)
	ReplaceComponentDefinition(context.Context, string, OscalComponentDefinition) (ImplResponse, error)
	UpdateComponentControlImplementationInComponentDefinition(context.Context, string, string, string, OscalComponentDefinitionComponentControlImplementation, string) (ImplResponse, error)
	UpdateComponentDefinition(context.Context, string, OscalComponentDefinitionUpdateExample) (ImplResponse, error)
	UpdateComponentInComponentDefinition(context.Context, string, string, OscalComponentDefinitionComponent, string) (ImplResponse, error)
}


// OSCALPartyApiServicer defines the api actions for the OSCALPartyApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OSCALPartyApiServicer interface { 
	AddParty(context.Context, OscalParty) (ImplResponse, error)
	DeleteParty(context.Context, string, string) (ImplResponse, error)
	FindPartiesByName(context.Context, string) (ImplResponse, error)
	GetParties(context.Context) (ImplResponse, error)
	GetPartyById(context.Context, string) (ImplResponse, error)
	UpdateParty(context.Context, string, OscalParty) (ImplResponse, error)
}


// OSCALProfileApiServicer defines the api actions for the OSCALProfileApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OSCALProfileApiServicer interface { 
	AddCatalogToProfile(context.Context, string, string, string, InlineObject) (ImplResponse, error)
	AddPartyToProfile(context.Context, string, string, string) (ImplResponse, error)
	AddPartyToProfileRole(context.Context, string, string, string, string) (ImplResponse, error)
	AddProfile(context.Context, OscalProfile) (ImplResponse, error)
	AddProfileToProfile(context.Context, string, string, string, InlineObject1) (ImplResponse, error)
	AddRoleToProfile(context.Context, string, OscalRole, string) (ImplResponse, error)
	DeleteProfile(context.Context, string, string) (ImplResponse, error)
	FindProfilesByName(context.Context, string) (ImplResponse, error)
	GetProfileById(context.Context, string) (ImplResponse, error)
	GetProfiles(context.Context) (ImplResponse, error)
	RemoveCatalogfromProfile(context.Context, string, string, string) (ImplResponse, error)
	RemovePartyfromProfile(context.Context, string, string, string) (ImplResponse, error)
	RemovePartyfromProfileRole(context.Context, string, string, string, string) (ImplResponse, error)
	RemoveProfilefromProfile(context.Context, string, string, string) (ImplResponse, error)
	RemoveRolefromProfile(context.Context, string, string, string) (ImplResponse, error)
	ReplaceProfile(context.Context, string, OscalProfile) (ImplResponse, error)
	UpdateProfile(context.Context, OscalProfileUpdateExample) (ImplResponse, error)
}


// OSCALSystemSecurityPlanApiServicer defines the api actions for the OSCALSystemSecurityPlanApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OSCALSystemSecurityPlanApiServicer interface { 
	AddComponentToSsp(context.Context, string, string, string) (ImplResponse, error)
	AddImplementedRequirementToSsp(context.Context, string, OscalImplementedRequirement) (ImplResponse, error)
	AddPartyToSsp(context.Context, string, string, string) (ImplResponse, error)
	AddSsp(context.Context, OscalSsp) (ImplResponse, error)
	DeleteSsp(context.Context, string, string) (ImplResponse, error)
	FindSspsByName(context.Context, string) (ImplResponse, error)
	GetSspById(context.Context, string) (ImplResponse, error)
	GetSsps(context.Context) (ImplResponse, error)
	RemoveComponentfromSsp(context.Context, string, string, string) (ImplResponse, error)
	RemovePartyfromSsp(context.Context, string, string, string) (ImplResponse, error)
	ReplaceSsp(context.Context, string, OscalSsp) (ImplResponse, error)
	UpdateImplementedRequirementOfSsp(context.Context, string, string, OscalImplementedRequirement) (ImplResponse, error)
	UpdateSsp(context.Context, string, OscalSspUpdateExample) (ImplResponse, error)
}

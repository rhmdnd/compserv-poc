/*
 * OSCAL REST
 *
 * A draft proposal from [Easy Dynamics](https://www.easydynamics.com) of a REST API specification for interacting   with [OSCAL](https://pages.nist.gov/OSCAL/) models.  Standardized data models like OSCAL lay the groundwork for interoperability of systems, and an ecosystem of meaningful integrations can be brought to life through a standardized REST API. That interface needs to define simple CRUD operations, but should also describe how to manipulate relationships and make partial changes.  Such an API will likely see the most success across various vendors and projects when maintained by a standards body or community, and we're looking to get that conversation started with this effort.  ## Identifier Scope Note that all object identifiers are **scoped to the system** implementing the REST API   and are expected to be unique.  <details>   <summary>Example</summary>   To associate a Party with a known Component Definition with a UUID you might:   1. Search for the Party:       ```       GET /parties/search?query=bob       ```       ```       [         {           \"uuid\": \"d834ed5e-9652-4b78-87e7-a9f8686f4e60\",           \"type\": \"person\",           \"name\": \"Bob Johnson\"         }       ]       ```   2. Use the found Party's ID to associate with the component definition:       ```       PUT /component-definitions/599b6fa5-3e18-4580-bd8f-8a181776c6e8/parties/d834ed5e-9652-4b78-87e7-a9f8686f4e60       ``` </details>  ## Partial Payloads in PATCH Requests All updates to 'root' OSCAL objects via `PATCH` requests should accept a partial payload containing only the changed data and the entire updated object should be returned.  The UUID of the root object must not change in the payload and implementations should throw an error if such a request is made. <details>   <summary>Example</summary>   Example request:   ```   PATCH /system-security-plans/cff8385f-108e-40a5-8f7a-82f3dc0eaba8   {     \"system-security-plan\": {       \"uuid\": \"cff8385f-108e-40a5-8f7a-82f3dc0eaba8\",       \"metadata\": {         \"title\": \"Some New Title\"       }     }   }   ``` </details> 
 *
 * API version: 0.1.0
 * Contact: info@easydynamics.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package compserv

import (
	"context"
	"net/http"
	"errors"
)

// OSCALSystemSecurityPlanApiService is a service that implements the logic for the OSCALSystemSecurityPlanApiServicer
// This service should implement the business logic for every endpoint for the OSCALSystemSecurityPlanApi API.
// Include any external packages or services that will be required by this service.
type OSCALSystemSecurityPlanApiService struct {
}

// NewOSCALSystemSecurityPlanApiService creates a default api service
func NewOSCALSystemSecurityPlanApiService() OSCALSystemSecurityPlanApiServicer {
	return &OSCALSystemSecurityPlanApiService{}
}

// AddComponentToSsp - Associates a component with an OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) AddComponentToSsp(ctx context.Context, sspId string, componentId string, apiKey string) (ImplResponse, error) {
	// TODO - update AddComponentToSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddComponentToSsp method not implemented")
}

// AddImplementedRequirementToSsp - Add an implemented requirement to an OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) AddImplementedRequirementToSsp(ctx context.Context, sspId string, oscalImplementedRequirement OscalImplementedRequirement) (ImplResponse, error) {
	// TODO - update AddImplementedRequirementToSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, []OscalImplementedRequirement{}) or use other options such as http.Ok ...
	//return Response(201, []OscalImplementedRequirement{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddImplementedRequirementToSsp method not implemented")
}

// AddPartyToSsp - Associates a party with an OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) AddPartyToSsp(ctx context.Context, sspId string, partyId string, apiKey string) (ImplResponse, error) {
	// TODO - update AddPartyToSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddPartyToSsp method not implemented")
}

// AddSsp - Adds a new OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) AddSsp(ctx context.Context, body OscalSsp) (ImplResponse, error) {
	// TODO - update AddSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddSsp method not implemented")
}

// DeleteSsp - Deletes an OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) DeleteSsp(ctx context.Context, sspId string, apiKey string) (ImplResponse, error) {
	// TODO - update DeleteSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteSsp method not implemented")
}

// FindSspsByName - Searches for OSCAL system security plans by name
func (s *OSCALSystemSecurityPlanApiService) FindSspsByName(ctx context.Context, query string) (ImplResponse, error) {
	// TODO - update FindSspsByName with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []OscalSsp{}) or use other options such as http.Ok ...
	//return Response(200, []OscalSsp{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("FindSspsByName method not implemented")
}

// GetSspById - Finds an OSCAL system security plan by ID
func (s *OSCALSystemSecurityPlanApiService) GetSspById(ctx context.Context, sspId string) (ImplResponse, error) {
	// TODO - update GetSspById with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, OscalSsp{}) or use other options such as http.Ok ...
	//return Response(200, OscalSsp{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSspById method not implemented")
}

// GetSsps - Returns all OSCAL system security plans
func (s *OSCALSystemSecurityPlanApiService) GetSsps(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetSsps with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []OscalSsp{}) or use other options such as http.Ok ...
	//return Response(200, []OscalSsp{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSsps method not implemented")
}

// RemoveComponentfromSsp - Removes a component from an OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) RemoveComponentfromSsp(ctx context.Context, sspId string, componentId string, apiKey string) (ImplResponse, error) {
	// TODO - update RemoveComponentfromSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveComponentfromSsp method not implemented")
}

// RemovePartyfromSsp - Removes a party from an OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) RemovePartyfromSsp(ctx context.Context, sspId string, partyId string, apiKey string) (ImplResponse, error) {
	// TODO - update RemovePartyfromSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemovePartyfromSsp method not implemented")
}

// ReplaceSsp - Replaces an existing OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) ReplaceSsp(ctx context.Context, sspId string, body OscalSsp) (ImplResponse, error) {
	// TODO - update ReplaceSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, OscalSsp{}) or use other options such as http.Ok ...
	//return Response(200, OscalSsp{}), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(415, {}) or use other options such as http.Ok ...
	//return Response(415, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ReplaceSsp method not implemented")
}

// UpdateImplementedRequirementOfSsp - Updates an implemented requirement in an OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) UpdateImplementedRequirementOfSsp(ctx context.Context, sspId string, implementedRequirementId string, oscalImplementedRequirement OscalImplementedRequirement) (ImplResponse, error) {
	// TODO - update UpdateImplementedRequirementOfSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, OscalImplementedRequirement{}) or use other options such as http.Ok ...
	//return Response(200, OscalImplementedRequirement{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateImplementedRequirementOfSsp method not implemented")
}

// UpdateSsp - Updates an existing OSCAL system security plan
func (s *OSCALSystemSecurityPlanApiService) UpdateSsp(ctx context.Context, sspId string, body OscalSspUpdateExample) (ImplResponse, error) {
	// TODO - update UpdateSsp with the required logic for this service method.
	// Add api_oscal_system_security_plan_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateSsp method not implemented")
}

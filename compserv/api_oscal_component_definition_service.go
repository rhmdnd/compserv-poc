/*
 * OSCAL REST
 *
 * A draft proposal from [Easy Dynamics](https://www.easydynamics.com) of a REST API specification for interacting   with [OSCAL](https://pages.nist.gov/OSCAL/) models.  Standardized data models like OSCAL lay the groundwork for interoperability of systems, and an ecosystem of meaningful integrations can be brought to life through a standardized REST API. That interface needs to define simple CRUD operations, but should also describe how to manipulate relationships and make partial changes.  Such an API will likely see the most success across various vendors and projects when maintained by a standards body or community, and we're looking to get that conversation started with this effort.  ## Identifier Scope Note that all object identifiers are **scoped to the system** implementing the REST API   and are expected to be unique.  <details>   <summary>Example</summary>   To associate a Party with a known Component Definition with a UUID you might:   1. Search for the Party:       ```       GET /parties/search?query=bob       ```       ```       [         {           \"uuid\": \"d834ed5e-9652-4b78-87e7-a9f8686f4e60\",           \"type\": \"person\",           \"name\": \"Bob Johnson\"         }       ]       ```   2. Use the found Party's ID to associate with the component definition:       ```       PUT /component-definitions/599b6fa5-3e18-4580-bd8f-8a181776c6e8/parties/d834ed5e-9652-4b78-87e7-a9f8686f4e60       ``` </details>  ## Partial Payloads in PATCH Requests All updates to 'root' OSCAL objects via `PATCH` requests should accept a partial payload containing only the changed data and the entire updated object should be returned.  The UUID of the root object must not change in the payload and implementations should throw an error if such a request is made. <details>   <summary>Example</summary>   Example request:   ```   PATCH /system-security-plans/cff8385f-108e-40a5-8f7a-82f3dc0eaba8   {     \"system-security-plan\": {       \"uuid\": \"cff8385f-108e-40a5-8f7a-82f3dc0eaba8\",       \"metadata\": {         \"title\": \"Some New Title\"       }     }   }   ``` </details> 
 *
 * API version: 0.1.0
 * Contact: info@easydynamics.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package compserv

import (
	"context"
	"net/http"
	"errors"
)

// OSCALComponentDefinitionApiService is a service that implements the logic for the OSCALComponentDefinitionApiServicer
// This service should implement the business logic for every endpoint for the OSCALComponentDefinitionApi API.
// Include any external packages or services that will be required by this service.
type OSCALComponentDefinitionApiService struct {
}

// NewOSCALComponentDefinitionApiService creates a default api service
func NewOSCALComponentDefinitionApiService() OSCALComponentDefinitionApiServicer {
	return &OSCALComponentDefinitionApiService{}
}

// AddComponentControlImplementationToComponentDefinition - Adds a new control implementation to a component in an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) AddComponentControlImplementationToComponentDefinition(ctx context.Context, componentDefinitionId string, componentId string, oscalComponentDefinitionComponentControlImplementation OscalComponentDefinitionComponentControlImplementation, apiKey string) (ImplResponse, error) {
	// TODO - update AddComponentControlImplementationToComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddComponentControlImplementationToComponentDefinition method not implemented")
}

// AddComponentDefinition - Adds a new OSCAL component definition
func (s *OSCALComponentDefinitionApiService) AddComponentDefinition(ctx context.Context, body OscalComponentDefinition) (ImplResponse, error) {
	// TODO - update AddComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddComponentDefinition method not implemented")
}

// AddComponentToComponentDefinition - Adds a new component to an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) AddComponentToComponentDefinition(ctx context.Context, componentDefinitionId string, oscalComponentDefinitionComponent OscalComponentDefinitionComponent, apiKey string) (ImplResponse, error) {
	// TODO - update AddComponentToComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddComponentToComponentDefinition method not implemented")
}

// AddPartyToComponentDefinition - Associates a party with an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) AddPartyToComponentDefinition(ctx context.Context, componentDefinitionId string, partyId string, apiKey string) (ImplResponse, error) {
	// TODO - update AddPartyToComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddPartyToComponentDefinition method not implemented")
}

// AddPartyToComponentDefinitionRole - Associates a party with role within an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) AddPartyToComponentDefinitionRole(ctx context.Context, componentDefinitionId string, roleId string, partyId string, apiKey string) (ImplResponse, error) {
	// TODO - update AddPartyToComponentDefinitionRole with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddPartyToComponentDefinitionRole method not implemented")
}

// AddRoleToComponentDefinition - Adds a new role to an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) AddRoleToComponentDefinition(ctx context.Context, componentDefinitionId string, oscalRole OscalRole, apiKey string) (ImplResponse, error) {
	// TODO - update AddRoleToComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddRoleToComponentDefinition method not implemented")
}

// DeleteComponentDefinition - Deletes an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) DeleteComponentDefinition(ctx context.Context, componentDefinitionId string, apiKey string) (ImplResponse, error) {
	// TODO - update DeleteComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteComponentDefinition method not implemented")
}

// FindComponentDefinitionsByName - Searches for OSCAL component definitions by name
func (s *OSCALComponentDefinitionApiService) FindComponentDefinitionsByName(ctx context.Context, query string) (ImplResponse, error) {
	// TODO - update FindComponentDefinitionsByName with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []OscalComponentDefinition{}) or use other options such as http.Ok ...
	//return Response(200, []OscalComponentDefinition{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("FindComponentDefinitionsByName method not implemented")
}

// GetComponentDefinitionById - Finds an OSCAL component definition by ID
func (s *OSCALComponentDefinitionApiService) GetComponentDefinitionById(ctx context.Context, componentDefinitionId string) (ImplResponse, error) {
	// TODO - update GetComponentDefinitionById with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, OscalComponentDefinition{}) or use other options such as http.Ok ...
	//return Response(200, OscalComponentDefinition{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetComponentDefinitionById method not implemented")
}

// GetComponentDefinitions - Returns all OSCAL component definitions
func (s *OSCALComponentDefinitionApiService) GetComponentDefinitions(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetComponentDefinitions with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []OscalComponentDefinition{}) or use other options such as http.Ok ...
	//return Response(200, []OscalComponentDefinition{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetComponentDefinitions method not implemented")
}

// RemoveComponentControlImplementationFromComponentDefinition - Removes a component control implementation from an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) RemoveComponentControlImplementationFromComponentDefinition(ctx context.Context, componentDefinitionId string, componentId string, componentControlImplementationId string, apiKey string) (ImplResponse, error) {
	// TODO - update RemoveComponentControlImplementationFromComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveComponentControlImplementationFromComponentDefinition method not implemented")
}

// RemoveComponentFromComponentDefinition - Removes a component from an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) RemoveComponentFromComponentDefinition(ctx context.Context, componentDefinitionId string, componentId string, apiKey string) (ImplResponse, error) {
	// TODO - update RemoveComponentFromComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveComponentFromComponentDefinition method not implemented")
}

// RemovePartyFromComponentDefinition - Removes a party from an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) RemovePartyFromComponentDefinition(ctx context.Context, componentDefinitionId string, partyId string, apiKey string) (ImplResponse, error) {
	// TODO - update RemovePartyFromComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemovePartyFromComponentDefinition method not implemented")
}

// RemovePartyFromComponentDefinitionRole - Removes a party from a role within an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) RemovePartyFromComponentDefinitionRole(ctx context.Context, componentDefinitionId string, roleId string, partyId string, apiKey string) (ImplResponse, error) {
	// TODO - update RemovePartyFromComponentDefinitionRole with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemovePartyFromComponentDefinitionRole method not implemented")
}

// RemoveRoleFromComponentDefinition - Removes a role from an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) RemoveRoleFromComponentDefinition(ctx context.Context, componentDefinitionId string, roleId string, apiKey string) (ImplResponse, error) {
	// TODO - update RemoveRoleFromComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveRoleFromComponentDefinition method not implemented")
}

// ReplaceComponentDefinition - Replaces an existing OSCAL component definition
func (s *OSCALComponentDefinitionApiService) ReplaceComponentDefinition(ctx context.Context, componentDefinitionId string, body OscalComponentDefinition) (ImplResponse, error) {
	// TODO - update ReplaceComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, OscalComponentDefinition{}) or use other options such as http.Ok ...
	//return Response(200, OscalComponentDefinition{}), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(415, {}) or use other options such as http.Ok ...
	//return Response(415, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ReplaceComponentDefinition method not implemented")
}

// UpdateComponentControlImplementationInComponentDefinition - Updates an existing control implementation in a component in an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) UpdateComponentControlImplementationInComponentDefinition(ctx context.Context, componentDefinitionId string, componentId string, componentControlImplementationId string, oscalComponentDefinitionComponentControlImplementation OscalComponentDefinitionComponentControlImplementation, apiKey string) (ImplResponse, error) {
	// TODO - update UpdateComponentControlImplementationInComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateComponentControlImplementationInComponentDefinition method not implemented")
}

// UpdateComponentDefinition - Updates an existing OSCAL component definition
func (s *OSCALComponentDefinitionApiService) UpdateComponentDefinition(ctx context.Context, componentDefinitionId string, body OscalComponentDefinitionUpdateExample) (ImplResponse, error) {
	// TODO - update UpdateComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateComponentDefinition method not implemented")
}

// UpdateComponentInComponentDefinition - Updates an existing component in an OSCAL component definition
func (s *OSCALComponentDefinitionApiService) UpdateComponentInComponentDefinition(ctx context.Context, componentDefinitionId string, componentId string, oscalComponentDefinitionComponent OscalComponentDefinitionComponent, apiKey string) (ImplResponse, error) {
	// TODO - update UpdateComponentInComponentDefinition with the required logic for this service method.
	// Add api_oscal_component_definition_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateComponentInComponentDefinition method not implemented")
}
